h1. Overview

Canvas is a lightweight framework for HTML5 / JavaScript animation. 

Canvas is configuration-based - instead of defining animation behavior in 
executable code, behavior is defined in configuration files. Because the 
framework code is reused for different elements, it is much smaller than a 
fully executable animation.

h1. Configuration

h2. Elements

Canvas elements have several attributes.

- identifier := the element's unique identifier. May be textually meaningful
- image := for displayable elements, the image associated with the element
- distance := for displayable elements, the relative distance to the associated image
- duration := start and stop times for an element's visibility; multiple pairs of times may be specified.
For elements triggered by other than timing events, the start time is specified as "*". =:
- operation := the operation attribute contains the operations that are to be executed for the element
- usecanvas := specifies an element whose canvas this element should be drawn on

h2. Operations

Operation configurations supply parameters to the operations that applied to elements.

h3. Defined operations

The following is a list of currently defined operations and their corresponding parameters

- banner := displays rotating text[99]

* "display parameters":'#display_parameters'
* align
* text
* rotate
* per_second

- bounce := image is bounced 

* top
* bottom

- clear := clear the image

- %(#fixed)fixed% := draw an element on the canvas at a fixed position

- move := move the image on the canvas

* "display parameters":'#display_parameters'
* cycle 

- pan := fills the background with the element image, and moves it as specified

* speed
* panin [99]
* panout [99]

- panin := slides a background image in, moving as specified [99]

* speed

- panout := slides a background image out [99]

* speed

h4. Parameter definitions

- bottom := identifies the lower range of motion for operation *bounce*
- top := identifies the upper range of motion for operation *bounce*

- cycle := if true, the element reenters the display from the edge opposite the one it disappeared from. [1] =:

- per_second := the number of rotations to make each second for operation *banner*
- rotate := the number of characters to move each rotation for operation *banner*
- text := the text to be displayed for operation *banner*

- panin := When true, specifies that the *pan* image will slide in at the beginning of
each duration or when the *pan* element is triggered by an event =:
- panout := When true, specifies that the *pan* image will slide out at the end of
each duration or when an event terminates the *pan* duration normally =:

h5(display_parameters). Display parameters

Display parameters denote where elements are to be placed

- align := adjusts a display image location reference point. Default is [top, left]. [2] 

- position := initial image position. May be percent of screen

- speed := Speed at which the element image moves across the screen. Scaled by 
element distance and screen refresh rate. =:

fn1. "true" is the current behavior.

fn2. Currently implemented for operation *fixed*.

h2. Events, Signals, and Triggers [99]

Events serve as notification that something of interest has happened. Triggers are 
the mechanism by which events are recognized and processed and subsequent actions are 
initiated.

h3. Events

Events allow interaction between the user and the animation, as well as among elements themselves.

h4. Mouse events

Mouse events are raised when a mouse operation occurs over the visual manifestation of an element. Mouse events are _only_ triggered for the element visible at the point of the mouse operation, i.e., if the RGB color is not #000000 and the opacity is not zero. Mouse events are defined on elements: the actions they trigger may also be defined there.

h4. Timer events

Timer events may be set to trigger element activation or termination. This is useful when fixed durations do not meet the animation needs. Timer events may be set to occur at fixed times, or at a time relative to the time they are created.

h4. Element events

Element events are raised when an element goes through a defined state transition. This could be element initialization, termination, or even position, e.g., _do x when the image hits the edge of the screen._ 

h3. Triggers

Events are happenings of interest. Triggers initiate the actions that are to be done
when those events occur.



h1. TODO

* consolidate fixed and move - Issue #1
* add option to use image center - Issue #2
* add "align" to other operations Issue #2
* make bounce top and bottom relative to image top and bottom - Issue #3
* make bounce work in a box, not just up and down - Issue #3
* add event mechanism - Issue 4
* fix button processing - Issue 5


fn99. Not yet implemented